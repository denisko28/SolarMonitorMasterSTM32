ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB68:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f1xx_it.c **** 
  28:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f1xx_it.c **** 
  31:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 2


  33:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f1xx_it.c ****  
  36:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f1xx_it.c **** 
  38:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f1xx_it.c **** 
  41:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f1xx_it.c **** 
  51:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** extern RTC_HandleTypeDef hrtc;
  60:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  62:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim4;
  63:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  64:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart3;
  65:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  66:Src/stm32f1xx_it.c **** 
  67:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  68:Src/stm32f1xx_it.c **** 
  69:Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  71:Src/stm32f1xx_it.c **** /******************************************************************************/
  72:Src/stm32f1xx_it.c **** /**
  73:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Src/stm32f1xx_it.c ****   */
  75:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  76:Src/stm32f1xx_it.c **** {
  27              		.loc 1 76 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  77:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Src/stm32f1xx_it.c **** 
  79:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Src/stm32f1xx_it.c **** }
  32              		.loc 1 83 1 view .LVU1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 3


  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE68:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB69:
  84:Src/stm32f1xx_it.c **** 
  85:Src/stm32f1xx_it.c **** /**
  86:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Src/stm32f1xx_it.c ****   */
  88:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  89:Src/stm32f1xx_it.c **** {
  47              		.loc 1 89 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  90:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 93 3 discriminator 1 view .LVU3
  94:Src/stm32f1xx_it.c ****   {
  95:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f1xx_it.c ****   }
  55              		.loc 1 97 3 discriminator 1 view .LVU4
  93:Src/stm32f1xx_it.c ****   {
  56              		.loc 1 93 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE69:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MemManage_Handler:
  70              	.LFB70:
  98:Src/stm32f1xx_it.c **** }
  99:Src/stm32f1xx_it.c **** 
 100:Src/stm32f1xx_it.c **** /**
 101:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f1xx_it.c ****   */
 103:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f1xx_it.c **** {
  71              		.loc 1 104 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 4


  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 105:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f1xx_it.c **** 
 107:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f1xx_it.c ****   while (1)
  78              		.loc 1 108 3 discriminator 1 view .LVU7
 109:Src/stm32f1xx_it.c ****   {
 110:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f1xx_it.c ****   }
  79              		.loc 1 112 3 discriminator 1 view .LVU8
 108:Src/stm32f1xx_it.c ****   {
  80              		.loc 1 108 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE70:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	BusFault_Handler:
  94              	.LFB71:
 113:Src/stm32f1xx_it.c **** }
 114:Src/stm32f1xx_it.c **** 
 115:Src/stm32f1xx_it.c **** /**
 116:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Src/stm32f1xx_it.c ****   */
 118:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f1xx_it.c **** {
  95              		.loc 1 119 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 120:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Src/stm32f1xx_it.c **** 
 122:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****   while (1)
 102              		.loc 1 123 3 discriminator 1 view .LVU11
 124:Src/stm32f1xx_it.c ****   {
 125:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f1xx_it.c ****   }
 103              		.loc 1 127 3 discriminator 1 view .LVU12
 123:Src/stm32f1xx_it.c ****   {
 104              		.loc 1 123 9 discriminator 1 view .LVU13
 105 0000 FEE7     		b	.L7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 5


 106              		.cfi_endproc
 107              	.LFE71:
 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB72:
 128:Src/stm32f1xx_it.c **** }
 129:Src/stm32f1xx_it.c **** 
 130:Src/stm32f1xx_it.c **** /**
 131:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f1xx_it.c ****   */
 133:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f1xx_it.c **** {
 119              		.loc 1 134 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L9:
 135:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f1xx_it.c **** 
 137:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 138 3 discriminator 1 view .LVU15
 139:Src/stm32f1xx_it.c ****   {
 140:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f1xx_it.c ****   }
 127              		.loc 1 142 3 discriminator 1 view .LVU16
 138:Src/stm32f1xx_it.c ****   {
 128              		.loc 1 138 9 discriminator 1 view .LVU17
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE72:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	SVC_Handler:
 142              	.LFB73:
 143:Src/stm32f1xx_it.c **** }
 144:Src/stm32f1xx_it.c **** 
 145:Src/stm32f1xx_it.c **** /**
 146:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Src/stm32f1xx_it.c ****   */
 148:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 149:Src/stm32f1xx_it.c **** {
 143              		.loc 1 149 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 6


 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Src/stm32f1xx_it.c **** 
 152:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Src/stm32f1xx_it.c **** 
 155:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Src/stm32f1xx_it.c **** }
 148              		.loc 1 156 1 view .LVU19
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE73:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	DebugMon_Handler:
 162              	.LFB74:
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
 159:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 163              		.loc 1 162 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 168              		.loc 1 169 1 view .LVU21
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE74:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu softvfp
 181              	PendSV_Handler:
 182              	.LFB75:
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 7


 172:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 183              		.loc 1 175 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 188              		.loc 1 182 1 view .LVU23
 189 0000 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE75:
 193              		.section	.text.SysTick_Handler,"ax",%progbits
 194              		.align	1
 195              		.global	SysTick_Handler
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu softvfp
 201              	SysTick_Handler:
 202              	.LFB76:
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 203              		.loc 1 188 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   HAL_IncTick();
 212              		.loc 1 192 3 view .LVU25
 213 0002 FFF7FEFF 		bl	HAL_IncTick
 214              	.LVL0:
 193:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Src/stm32f1xx_it.c **** 
 195:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Src/stm32f1xx_it.c **** }
 215              		.loc 1 196 1 is_stmt 0 view .LVU26
 216 0006 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 8


 217              		.cfi_endproc
 218              	.LFE76:
 220              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 221              		.align	1
 222              		.global	EXTI3_IRQHandler
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu softvfp
 228              	EXTI3_IRQHandler:
 229              	.LFB77:
 197:Src/stm32f1xx_it.c **** 
 198:Src/stm32f1xx_it.c **** /******************************************************************************/
 199:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 200:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 203:Src/stm32f1xx_it.c **** /******************************************************************************/
 204:Src/stm32f1xx_it.c **** 
 205:Src/stm32f1xx_it.c **** /**
 206:Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 207:Src/stm32f1xx_it.c ****   */
 208:Src/stm32f1xx_it.c **** void EXTI3_IRQHandler(void)
 209:Src/stm32f1xx_it.c **** {
 230              		.loc 1 209 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI1:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 210:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 211:Src/stm32f1xx_it.c **** 
 212:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 213:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 239              		.loc 1 213 3 view .LVU28
 240 0002 0820     		movs	r0, #8
 241 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 242              	.LVL1:
 214:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 215:Src/stm32f1xx_it.c **** 
 216:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 217:Src/stm32f1xx_it.c **** }
 243              		.loc 1 217 1 is_stmt 0 view .LVU29
 244 0008 08BD     		pop	{r3, pc}
 245              		.cfi_endproc
 246              	.LFE77:
 248              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	EXTI4_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu softvfp
 256              	EXTI4_IRQHandler:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 9


 257              	.LFB78:
 218:Src/stm32f1xx_it.c **** 
 219:Src/stm32f1xx_it.c **** /**
 220:Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 221:Src/stm32f1xx_it.c ****   */
 222:Src/stm32f1xx_it.c **** void EXTI4_IRQHandler(void)
 223:Src/stm32f1xx_it.c **** {
 258              		.loc 1 223 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 224:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 225:Src/stm32f1xx_it.c **** 
 226:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 227:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 267              		.loc 1 227 3 view .LVU31
 268 0002 1020     		movs	r0, #16
 269 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 270              	.LVL2:
 228:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 229:Src/stm32f1xx_it.c **** 
 230:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 231:Src/stm32f1xx_it.c **** }
 271              		.loc 1 231 1 is_stmt 0 view .LVU32
 272 0008 08BD     		pop	{r3, pc}
 273              		.cfi_endproc
 274              	.LFE78:
 276              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 277              		.align	1
 278              		.global	TIM2_IRQHandler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu softvfp
 284              	TIM2_IRQHandler:
 285              	.LFB79:
 232:Src/stm32f1xx_it.c **** 
 233:Src/stm32f1xx_it.c **** /**
 234:Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 235:Src/stm32f1xx_it.c ****   */
 236:Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 237:Src/stm32f1xx_it.c **** {
 286              		.loc 1 237 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI3:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 238:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 10


 239:Src/stm32f1xx_it.c **** 
 240:Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 241:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 295              		.loc 1 241 3 view .LVU34
 296 0002 0248     		ldr	r0, .L21
 297 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 298              	.LVL3:
 242:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 243:Src/stm32f1xx_it.c **** 
 244:Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 245:Src/stm32f1xx_it.c **** }
 299              		.loc 1 245 1 is_stmt 0 view .LVU35
 300 0008 08BD     		pop	{r3, pc}
 301              	.L22:
 302 000a 00BF     		.align	2
 303              	.L21:
 304 000c 00000000 		.word	htim2
 305              		.cfi_endproc
 306              	.LFE79:
 308              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 309              		.align	1
 310              		.global	TIM3_IRQHandler
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu softvfp
 316              	TIM3_IRQHandler:
 317              	.LFB80:
 246:Src/stm32f1xx_it.c **** 
 247:Src/stm32f1xx_it.c **** /**
 248:Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 249:Src/stm32f1xx_it.c ****   */
 250:Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 251:Src/stm32f1xx_it.c **** {
 318              		.loc 1 251 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 252:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 253:Src/stm32f1xx_it.c **** 
 254:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 255:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 327              		.loc 1 255 3 view .LVU37
 328 0002 0248     		ldr	r0, .L25
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 330              	.LVL4:
 256:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 257:Src/stm32f1xx_it.c **** 
 258:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 259:Src/stm32f1xx_it.c **** }
 331              		.loc 1 259 1 is_stmt 0 view .LVU38
 332 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 11


 333              	.L26:
 334 000a 00BF     		.align	2
 335              	.L25:
 336 000c 00000000 		.word	htim3
 337              		.cfi_endproc
 338              	.LFE80:
 340              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 341              		.align	1
 342              		.global	TIM4_IRQHandler
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu softvfp
 348              	TIM4_IRQHandler:
 349              	.LFB81:
 260:Src/stm32f1xx_it.c **** 
 261:Src/stm32f1xx_it.c **** /**
 262:Src/stm32f1xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 263:Src/stm32f1xx_it.c ****   */
 264:Src/stm32f1xx_it.c **** void TIM4_IRQHandler(void)
 265:Src/stm32f1xx_it.c **** {
 350              		.loc 1 265 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI5:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 266:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 267:Src/stm32f1xx_it.c **** 
 268:Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 269:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 359              		.loc 1 269 3 view .LVU40
 360 0002 0248     		ldr	r0, .L29
 361 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 362              	.LVL5:
 270:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 271:Src/stm32f1xx_it.c **** 
 272:Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 273:Src/stm32f1xx_it.c **** }
 363              		.loc 1 273 1 is_stmt 0 view .LVU41
 364 0008 08BD     		pop	{r3, pc}
 365              	.L30:
 366 000a 00BF     		.align	2
 367              	.L29:
 368 000c 00000000 		.word	htim4
 369              		.cfi_endproc
 370              	.LFE81:
 372              		.section	.text.USART1_IRQHandler,"ax",%progbits
 373              		.align	1
 374              		.global	USART1_IRQHandler
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 12


 380              	USART1_IRQHandler:
 381              	.LFB82:
 274:Src/stm32f1xx_it.c **** 
 275:Src/stm32f1xx_it.c **** /**
 276:Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 277:Src/stm32f1xx_it.c ****   */
 278:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 279:Src/stm32f1xx_it.c **** {
 382              		.loc 1 279 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 08B5     		push	{r3, lr}
 387              	.LCFI6:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 3, -8
 390              		.cfi_offset 14, -4
 280:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 281:Src/stm32f1xx_it.c **** 
 282:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 283:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 391              		.loc 1 283 3 view .LVU43
 392 0002 0248     		ldr	r0, .L33
 393 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 394              	.LVL6:
 284:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 285:Src/stm32f1xx_it.c **** 
 286:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 287:Src/stm32f1xx_it.c **** }
 395              		.loc 1 287 1 is_stmt 0 view .LVU44
 396 0008 08BD     		pop	{r3, pc}
 397              	.L34:
 398 000a 00BF     		.align	2
 399              	.L33:
 400 000c 00000000 		.word	huart1
 401              		.cfi_endproc
 402              	.LFE82:
 404              		.section	.text.USART3_IRQHandler,"ax",%progbits
 405              		.align	1
 406              		.global	USART3_IRQHandler
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu softvfp
 412              	USART3_IRQHandler:
 413              	.LFB83:
 288:Src/stm32f1xx_it.c **** 
 289:Src/stm32f1xx_it.c **** /**
 290:Src/stm32f1xx_it.c ****   * @brief This function handles USART3 global interrupt.
 291:Src/stm32f1xx_it.c ****   */
 292:Src/stm32f1xx_it.c **** void USART3_IRQHandler(void)
 293:Src/stm32f1xx_it.c **** {
 414              		.loc 1 293 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 13


 419              	.LCFI7:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 3, -8
 422              		.cfi_offset 14, -4
 294:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 295:Src/stm32f1xx_it.c **** 
 296:Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 297:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 423              		.loc 1 297 3 view .LVU46
 424 0002 0248     		ldr	r0, .L37
 425 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 426              	.LVL7:
 298:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 299:Src/stm32f1xx_it.c **** 
 300:Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 301:Src/stm32f1xx_it.c **** }
 427              		.loc 1 301 1 is_stmt 0 view .LVU47
 428 0008 08BD     		pop	{r3, pc}
 429              	.L38:
 430 000a 00BF     		.align	2
 431              	.L37:
 432 000c 00000000 		.word	huart3
 433              		.cfi_endproc
 434              	.LFE83:
 436              		.section	.text.RTC_Alarm_IRQHandler,"ax",%progbits
 437              		.align	1
 438              		.global	RTC_Alarm_IRQHandler
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu softvfp
 444              	RTC_Alarm_IRQHandler:
 445              	.LFB84:
 302:Src/stm32f1xx_it.c **** 
 303:Src/stm32f1xx_it.c **** /**
 304:Src/stm32f1xx_it.c ****   * @brief This function handles RTC alarm interrupt through EXTI line 17.
 305:Src/stm32f1xx_it.c ****   */
 306:Src/stm32f1xx_it.c **** void RTC_Alarm_IRQHandler(void)
 307:Src/stm32f1xx_it.c **** {
 446              		.loc 1 307 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 308:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN RTC_Alarm_IRQn 0 */
 309:Src/stm32f1xx_it.c **** 
 310:Src/stm32f1xx_it.c ****   /* USER CODE END RTC_Alarm_IRQn 0 */
 311:Src/stm32f1xx_it.c ****   HAL_RTC_AlarmIRQHandler(&hrtc);
 455              		.loc 1 311 3 view .LVU49
 456 0002 0248     		ldr	r0, .L41
 457 0004 FFF7FEFF 		bl	HAL_RTC_AlarmIRQHandler
 458              	.LVL8:
 312:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN RTC_Alarm_IRQn 1 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 14


 313:Src/stm32f1xx_it.c **** 
 314:Src/stm32f1xx_it.c ****   /* USER CODE END RTC_Alarm_IRQn 1 */
 315:Src/stm32f1xx_it.c **** }
 459              		.loc 1 315 1 is_stmt 0 view .LVU50
 460 0008 08BD     		pop	{r3, pc}
 461              	.L42:
 462 000a 00BF     		.align	2
 463              	.L41:
 464 000c 00000000 		.word	hrtc
 465              		.cfi_endproc
 466              	.LFE84:
 468              		.text
 469              	.Letext0:
 470              		.file 2 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-none
 471              		.file 3 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-none
 472              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 473              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 474              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 475              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 476              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 477              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 478              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 479              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 480              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 481              		.file 13 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-non
 482              		.file 14 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-non
 483              		.file 15 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\lib\\gc
 484              		.file 16 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-non
 485              		.file 17 "c:\\users\\user\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc\\arm-non
 486              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccD6eZwh.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:16     .text.NMI_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:38     .text.HardFault_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:62     .text.MemManage_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:86     .text.BusFault_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:110    .text.UsageFault_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:134    .text.SVC_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:141    .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:154    .text.DebugMon_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:174    .text.PendSV_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:181    .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:194    .text.SysTick_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:201    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:221    .text.EXTI3_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:228    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:249    .text.EXTI4_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:256    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:277    .text.TIM2_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:284    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:304    .text.TIM2_IRQHandler:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:309    .text.TIM3_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:316    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:336    .text.TIM3_IRQHandler:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:341    .text.TIM4_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:348    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:368    .text.TIM4_IRQHandler:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:373    .text.USART1_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:380    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:400    .text.USART1_IRQHandler:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:405    .text.USART3_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:412    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:432    .text.USART3_IRQHandler:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:437    .text.RTC_Alarm_IRQHandler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:444    .text.RTC_Alarm_IRQHandler:0000000000000000 RTC_Alarm_IRQHandler
C:\Users\User\AppData\Local\Temp\ccD6eZwh.s:464    .text.RTC_Alarm_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim2
htim3
htim4
HAL_UART_IRQHandler
huart1
huart3
HAL_RTC_AlarmIRQHandler
hrtc
